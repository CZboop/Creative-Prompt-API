{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zeina\\\\Documents\\\\BNTA\\\\java\\\\practiceapi\\\\front_end\\\\prompt-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Prompt from './components/Prompt';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [prompt, setPrompt] = useState(\"\");\n\n  const faviconRandomiser = () => {\n    const options = [\"🖊️\", \"🖌️\", \"🎨\", \"💻\", \"🖱️\", \"📸\"];\n    let fav = document.querySelector(\"link[rel~='icon']\");\n    let randEmoji = options[Math.floor(Math.random() * options.length)];\n    fav.href = `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${randEmoji}</text></svg>`;\n    return randEmoji;\n  };\n\n  const getRandomPrompt = () => {\n    faviconRandomiser();\n    fetch(\"http://localhost:8080/api/random\").then(data => data.json()).then(response => {\n      if (response.status != 200) {\n        alert(\"No matching prompt was found, maybe try increasing the time\");\n      }\n    }).then(data => setPrompt(JSON.stringify(data)));\n  };\n\n  const getFilteredPrompt = promptRequest => {\n    console.log(promptRequest);\n    fetch(`http://localhost:8080/api/filtered/${promptRequest.minsToComplete}/${promptRequest.discipline}/${promptRequest.difficulty}`).then(data => data.json()).then(data => setPrompt(JSON.stringify(data)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      emoji: faviconRandomiser()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      getRandomPrompt: getRandomPrompt,\n      getFilteredPrompt: getFilteredPrompt,\n      faviconRandomiser: faviconRandomiser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Prompt, {\n      prompt: prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/zeina/Documents/BNTA/java/practiceapi/front_end/prompt-app/src/App.js"],"names":["Header","Form","Prompt","useState","App","prompt","setPrompt","faviconRandomiser","options","fav","document","querySelector","randEmoji","Math","floor","random","length","href","getRandomPrompt","fetch","then","data","json","response","status","alert","JSON","stringify","getFilteredPrompt","promptRequest","console","log","minsToComplete","discipline","difficulty"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMI,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,IAArB,EAA2B,KAA3B,EAAkC,IAAlC,CAAhB;AACA,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAV;AACA,QAAIC,SAAS,GAAGJ,OAAO,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcP,OAAO,CAACQ,MAAjC,CAAD,CAAvB;AACAP,IAAAA,GAAG,CAACQ,IAAJ,GAAY,kIAAiIL,SAAU,eAAvJ;AACA,WAAOA,SAAP;AACD,GAND;;AASA,QAAMM,eAAe,GAAG,MAAM;AAC5BX,IAAAA,iBAAiB;AACjBY,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEOG,QAAD,IAAc;AAAC,UAAIA,QAAQ,CAACC,MAAT,IAAiB,GAArB,EAAyB;AAC5CC,QAAAA,KAAK,CAAC,6DAAD,CAAL;AACD;AAAC,KAJF,EAKCL,IALD,CAKMC,IAAI,IAAEf,SAAS,CAACoB,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAD,CALrB;AAOD,GATD;;AAWA,QAAMO,iBAAiB,GAAIC,aAAD,IAAmB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAV,IAAAA,KAAK,CAAE,sCAAqCU,aAAa,CAACG,cAAe,IAAGH,aAAa,CAACI,UAAW,IAAGJ,aAAa,CAACK,UAAW,EAA5H,CAAL,CAECd,IAFD,CAEMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAFd,EAGCF,IAHD,CAGMC,IAAI,IAAEf,SAAS,CAACoB,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAD,CAHrB;AAKD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEd,iBAAiB;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,eAAe,EAAEW,eAAvB;AAAwC,MAAA,iBAAiB,EAAEU,iBAA3D;AAA8E,MAAA,iBAAiB,EAAErB;AAAjG;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvCQD,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Prompt from './components/Prompt';\nimport {useState} from 'react';\n\nfunction App() {\n  const [prompt, setPrompt] = useState(\"\");\n\n  const faviconRandomiser = () => {\n    const options = [\"🖊️\", \"🖌️\", \"🎨\", \"💻\", \"🖱️\", \"📸\" ];\n    let fav = document.querySelector(\"link[rel~='icon']\");\n    let randEmoji = options[Math.floor(Math.random()*options.length)]; \n    fav.href = `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${randEmoji}</text></svg>`\n    return randEmoji;\n  }\n\n\n  const getRandomPrompt = () => {\n    faviconRandomiser();\n    fetch(\"http://localhost:8080/api/random\")\n    .then(data => data.json())\n    .then((response) => {if (response.status!=200){\n      alert(\"No matching prompt was found, maybe try increasing the time\")\n    }})\n    .then(data=>setPrompt(JSON.stringify(data)))\n\n  }\n\n  const getFilteredPrompt = (promptRequest) => {\n    console.log(promptRequest);\n    fetch(`http://localhost:8080/api/filtered/${promptRequest.minsToComplete}/${promptRequest.discipline}/${promptRequest.difficulty}`\n    )\n    .then(data => data.json())\n    .then(data=>setPrompt(JSON.stringify(data)))\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Header emoji={faviconRandomiser()}/>\n      <Form getRandomPrompt={getRandomPrompt} getFilteredPrompt={getFilteredPrompt} faviconRandomiser={faviconRandomiser}/>\n      <Prompt prompt={prompt}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}